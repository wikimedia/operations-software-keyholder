"""RSA tests."""

from Crypto.PublicKey import RSA
from keyholder.crypto import SshRSAKey
from keyholder.protocol.agent import SshAgentSignatureFlags as flags

# pylint: disable=line-too-long


def test_ssh_rsa_key():
    """Test various operations of SshRSAKey."""

    rsa_private_pem = """-----BEGIN RSA PRIVATE KEY-----
    MIIEoQIBAAKCAQEAp9uM5bymTbJco5n1R72lEktbs0lXby9objRCQvLHjNg6aBzQ
    pJt+zh1Kl4HqrBaO/CBH5d1Jl1SzJiCXG0QiTxVzeYixaYewcU/kCnpZjydZXinQ
    dsbz7MPHqJaR2qqgTGm2MvA1OqdCslkCMSeGwq2omjPxR8EZRFvrvkml99GkeAu/
    f6aCTqSQSAyVvZIL/Vh1WRagTjmcoLuSTmEMdywQKuKMFJamBeZIgZJHckP3cPBY
    wLGuUTCfrKvvTpeHOzqFH1QU/JKqCWZ+ZxOA15+7JWUNgNe5/SP3vyqBy0wnjaMI
    4VAYlf7lBv5/9UmGFS9/+YyheB3IRY4FrNSw8QIDAQABAoIBADFLSm9VHUmH7ail
    1+A/kzByLPXTvfeK5pImiqb6gRudjFlyzNrqRyzkcTlZD7+FyGvGVxbsC2aDmzDB
    NV7ufVzYIdc5C1DAZlKAcamaEJ73oUkD4pJfDtcjD4k03pRmszh9euIupJMa931E
    ol4pC2w0b2UJh/vYe0EV9X8mRbUmw6yPgmXIYfEj0n2ttQ46VcfWfND1aM4yuhCe
    0chsYOYqcLnQxpPF7/kWhHmALUi76bcuDI91qz9pBsAWdd2k1SIUha/sN6Z+cts+
    5L+XGRP+ai7V7hpOb0VSOYjMniuVy9M9dxHfXsl4PATQ1tt77Kro6zVaGKdOtip5
    zKKHsyECgYEA3bfdbZJ2/Y0OqhHceBAR7IeuX7TuSnnHJA3jD5mDWpRJkEf/kooZ
    tWfMRyDS2q1iMBF5uNOr6n/qwV9puZcjKSNLDbdR3JIGPFwZIaVbawatiCW3a6Xd
    0Z0Yvbx+wjm2a+93hUDVUvANsLTxy0x6stRTZnIz4bdmdVGIur5iJOUCgYEAwc/B
    J8wAWvFXR+d+bNlS2Db1LQhXWIWg/vr1NbN7ActSx1adsg01P5aKMh0/WRIe9aXA
    XxnfPAWSFWiCsinq7S2zgatJ68OB5v2KOtuvgpuPjZ5IjiOzkz/BLeR5e4QEkYt6
    QTVKX2AYjpH93ZjV8+kg+R9rFBC/BPAH28DfRx0CgYEAnJxHWCJg0nBUr2S2akhP
    oNemIAxZVVn3hEwa2uYAlnawD64LpKLPzgdnj8ZrqfNWq8VsSVWa1aVNWRHgSCut
    tl0roqCevkKXDQOw7Mc0b8Djyot5qBwdNvbUhxEiKGdDp7IappFJHbBauzrUoFmB
    QdggoPiCFSnKwYu6HM5l3NECf2AlsK0Nhx+WmrYRIabeKTsaCIdOnAZORJA572u0
    nlFFjMtXLOQnqULia6xw1fxaAQHcOJL1QsmD+fSk5DF+mg0Pnv20+/b6BneRUAHi
    +i7Q/WZEH7pj+7IQ7sTVk26zD5EkoIG47ixif8w6oLZOG9Xk0XbFH1nU9O5+JWff
    RuUCgYBKWTN4dlpSgXQrE7kQWbnhPyxMokj6e+pZFCPaUZ9Ef+LCukjS6IaPZUIb
    sZOSlksIPBvxtRWo4JyGDKScz6PXKuCuQAovNjuflg6q3FkD0SNzeU3+5dBE7ZQ0
    YXhpkCNwIj4WcmKNPKnOI40BxzWqO6GLaws+/3x/KDmOwgU82g==
    -----END RSA PRIVATE KEY-----"""

    rsa_key = RSA.importKey(rsa_private_pem)
    tup = (rsa_key.n, rsa_key.e, rsa_key.d, rsa_key.p, rsa_key.q, rsa_key.u)
    key = SshRSAKey(tup, "comment")

    key_fingerprint = "SHA256:fwYfXnbZEvY5i4tWlDFLbaTfWxt8wOvKyF3yX5sWyJo"
    assert key.fingerprint == key_fingerprint

    assert repr(key) == "<%s: %s>" % ("SshRSAKey", key_fingerprint)

    key_blob = b"\x00\x00\x00\x07ssh-rsa\x00\x00\x00\x03\x01\x00\x01\x00\x00\x01\x01\x00\xa7\xdb\x8c\xe5\xbc\xa6M\xb2\\\xa3\x99\xf5G\xbd\xa5\x12K[\xb3IWo/hn4BB\xf2\xc7\x8c\xd8:h\x1c\xd0\xa4\x9b~\xce\x1dJ\x97\x81\xea\xac\x16\x8e\xfc G\xe5\xddI\x97T\xb3& \x97\x1bD\"O\x15sy\x88\xb1i\x87\xb0qO\xe4\nzY\x8f'Y^)\xd0v\xc6\xf3\xec\xc3\xc7\xa8\x96\x91\xda\xaa\xa0Li\xb62\xf05:\xa7B\xb2Y\x021'\x86\xc2\xad\xa8\x9a3\xf1G\xc1\x19D[\xeb\xbeI\xa5\xf7\xd1\xa4x\x0b\xbf\x7f\xa6\x82N\xa4\x90H\x0c\x95\xbd\x92\x0b\xfdXuY\x16\xa0N9\x9c\xa0\xbb\x92Na\x0cw,\x10*\xe2\x8c\x14\x96\xa6\x05\xe6H\x81\x92GrC\xf7p\xf0X\xc0\xb1\xaeQ0\x9f\xac\xab\xefN\x97\x87;:\x85\x1fT\x14\xfc\x92\xaa\tf~g\x13\x80\xd7\x9f\xbb%e\r\x80\xd7\xb9\xfd#\xf7\xbf*\x81\xcbL'\x8d\xa3\x08\xe1P\x18\x95\xfe\xe5\x06\xfe\x7f\xf5I\x86\x15/\x7f\xf9\x8c\xa1x\x1d\xc8E\x8e\x05\xac\xd4\xb0\xf1"
    assert key.key_blob == key_blob

    signed_sha1 = {
        "key_type": "ssh-rsa",
        "signature": b"y\xec/\x99\xb2G\xf6M\xcd`\xb6z\xb6\xaf\xfdN[W9\xe2\x1e\xcaq3b\x17\x15\x1f\x19\xe5\xfe\xf5\xa3/V\xbe+\xed\x81\xfa\xb5\xa2\xa9\xe4\x04\xe76W\xd2\xb0&T\xff\xcd\xb5a\xea\x919\x0c/3\xc9j\xac\xed\xe0\xdc;^:\xc3\x813*8\xc9\xc3g\xbc\xbftE\x82\xb8\x9f1\xa2\xe5\xf4\xce\xe3\x063\xef\x18\x1b%\xf1\x9f\xf1R$\x80\xc6\x933 \xe2\xc8R\xe3N\xc9U\x88fRQ\xb0\xcf.f\x1fj\x9af*\xe2\xf7\xb3P\x1c\xb3\x8bo\xc8\xf1}Q\xbcG\xfe8\x16NRY6|\xec\xbf\xd8\x860;\xd5\tK\xec\x08\xc6\x89O\xfa\x7f\xd1\xcf\x05t\x9bT\xb2J\xffT<\xde\xc5\x7fb\xc3\x8d\xcc-\xef\xd5=\xcc\x964\xa6\xe9\x02\x94\x199\xb3\tf\xb1Is\x08\xfdr\xc0X\x92\xc7f\xf0\xe0\xbe4\x1e\x96\x0eZ3\xb7lmH\xe4\xb2H;\xaa\x9b\xa3\x0e'\xbb\xceS\x04\xa1 (@\x7f\xff\x19\xd1\xf9X\xc7E\xca\xa1\xe4Z\x8e\x04\x1a",
    }
    assert key.sign(b"test", 0) == signed_sha1

    signed_sha256 = {
        "key_type": "ssh-rsa",
        "signature": b"vzq\xa9F\xbff\xdb\xec\x1c\x1c.\xa5\x1a\xa6d\x17\x1fJ\x9c/\xb4~$\xa0P\x90\xc5\x1c\xd73,Z|e@\xc6Ln\r\xf9\xffs&4\xf9\xb5\x1eS6\x87\x8d\xa9\xbd\xe8i\x94*\xb9<qT\xe1y,w\x8d\x8a\xbd\x1fj\xb5P}\xc6\x8e\xc8\xee\xad\xfd'\x992sI\x03N\xde\x9f\x80\xc2\xcb\xdf\xff\xcdl\xa0X\xd8\xe4\xb7@\xecm\xb9\xc9T\x8c\x82\xb3\xb6\x01\xea\xcd\xdd\n\xdc\n\xeb\xd5\xd4\xe9%\xfecbQ\xfc\x8d\xbcf\x856h\x86\x96\xa3\xfb\x80\xa3M\xcf\x8b\x0fW93\xbb\xe9.\x19\xd8!\x90\xa0\xf3V:|\xd5\xf4r\xe7\xe5\xdeu_\xa2\xe0\xc5\xc1\x81\xf4\xf5\x0bX\x16|\x1e\xcd\xe3\xf3\xd9\xa0\x8a\x16\x11\xf4\xc5-\xca\xc5\xc3\x0f\x10R\x12\xe8\x83bY\x8fh2\x8b\nd\xf8\xcb\x97\xaa\xbdX\x83\x98!\xbfU\x05\r\x0bR\x0f\xc1^\x19!\x7f\x96\x15C\xe31\xec\xbeC\xff\x9c\x0b\xef_\x05\xf8\x90\xe1\xf76\x8d,\x92\t\xb5\x98G\xd1\x04",
    }
    assert key.sign(b"test", flags.AGENT_RSA_SHA2_256) == signed_sha256

    signed_sha512 = {
        "key_type": "ssh-rsa",
        "signature": b"\x92(o\x0c\xd4\xbaB\x1brx\xe8\xbe\xe4a\x92`\x0e\xfc\x93\xf4\xa2\x94\xfe\xc7~\xe1\x16k/-\xa3q\x92\x95(3\xe1\xd0\x0f\xdf\xee\x16\xc5o=\x8e\x93\xb9\xa7e\xbb}b%\xc1y\xc4\x9e\xd6\xae\xb1\xeb\x12\"\xd6T\xcd\r\\i5]\"\xfd\xaa\xadY\x93\x05\x94\xb7\xa7\xf5\xa7tM\xc62\xf5B\x01'\x13+\xd1\x95\xd0N\xd6bo\x1b\x16\xc8\x07\x17\xee\xfc\xeav#f\x82&\xe6Q\xb7\xc8\x03\x86\x8e;\x9eL*\x1bPK^8\x99\xe1zP\x19\x14\x97 \xeb}\x9f\xb3\xb5;\xc6\xc1\x86Wx\xbc\x9cq Y'\xe8\xe2tn\x9c,\xb5\x04\xa7e\t\xc4+v\x1f\xd7\xf5+{~\x9cWo\xee\xbb%\xa0\xa5\xcb_.\xd1\x01\xf25Y\xed\xb1\xee5\xc0\xbc\xc9\xf3\x16\xf8g\x87\xd7\x14\xc11VA\xd4#\x12M\xf2\x1e8\xad\xd9Htvd\xe6\n\x02W\xad\xcc\xe6D\xefg\x99\xc8}K\xa2\x17\xc7\x07J\xb2X\x052\xf4\xe8\xa2\xa68\xec\xa0\xfa\xb6\xe3+",
    }
    assert key.sign(b"test", flags.AGENT_RSA_SHA2_512) == signed_sha512
